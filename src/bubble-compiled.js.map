{"version":3,"sources":["bubble.js"],"names":[],"mappings":"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","file":"bubble-compiled.js","sourcesContent":["\"use strict\";\n\n\n/*******************************************************************************\n *\n * GAME WORLD\n *\n * We inherit from a Phaser.js game element and provide additional methods.\n * Let's not over-engineer it: we simply add some methods and attributes to the\n * global *game* object.\n *\n * The game's mainloop is the mainloop of the application. We can register\n * events by\n *\n *******************************************************************************\n */\n// Game element\nvar WIDTH = 1000;\nvar HEIGHT = 700;\n\n// Forces and brownian dynamics\nvar BROWNIAN_STRENGTH = 1200;\nvar LINEAR_DAMPING = 0.3;\nvar ANGULAR_DAMPING = 0.1;\nvar DRIFT_VELOCITY = 50;\nvar DRIFT_DAMPING = 7;\nvar SPRING_CONSTANT = 200;\n\n// Separation force\nvar SEPARATION_POINT = WIDTH / 2;\nvar MIGRATION_PROBABILITY = 1.0;\nvar MIGRATION_DELTA_SPEED = 50;\n\n// Biological parameters\nvar MAX_DENSITY = 100;\nvar FITNESS_EXPONENT = 1;\nvar MATING_DURATION = 40;\nvar MUTATION_RATE_A = 0;\nvar MUTATION_RATE_B = 0;\nvar LINKAGE = 0;\nvar OFFSPRING = 1;\nvar MUTATION_GROUP_SIZE = 5;\nvar ALLELE_FREQS = {\n    a: [0.5, 0.5, 0],\n    b: [0.5, 0.5, 0]\n}\n\n// Plots and UI\nvar PLOT_UPDATE_INTERVAL = 100;\nvar TEMPLATES = {};\n\n\nvar game = new Phaser.Game(WIDTH, HEIGHT,\n                           Phaser.AUTO,\n                           'game-canvas',\n                           {preload: preload, create: create, update: update},\n                           true);\n\n// Game public attributes\n\n// Game methods\nfunction preload() {\n    for (var i=1; i <= 3; i++) {\n        for (var j=i; j <= 3; j++) {\n            for (var m=1; m <= 3; m++) {\n                for (var n=m; n <= 3; n++) {\n                    var code = i.toString() + j.toString() + m.toString() + n.toString();\n                    game.load.image('f' + code, 'assets/f' + code + \".png\");\n                    game.load.image('m' + code, 'assets/m' + code + \".png\");\n                }\n            }\n        }\n    }\n    game.load.image('sepline', 'assets/separator.png');\n}\n\n\nfunction create() {\n    // Prepare the canvas element\n    var canvas = document.getElementById('game-canvas');\n    canvas.width = WIDTH;\n    canvas.height = HEIGHT;\n\n    //  We use the P2 physics engine in order to have polygon rotations.\n    game.physics.startSystem(Phaser.Physics.P2JS);\n    game.physics.p2.setImpactEvents(true);\n    game.physics.p2.restitution = 1;\n\n    // Add division\n    game.division = game.add.sprite(SEPARATION_POINT, HEIGHT / 2, 'sepline');\n    game.division.scale.setTo(1, 1);\n    game.physics.p2.enable(game.division);\n    game.division.body.kinematic = true;\n    game.physics.p2.world.on('preSolve', onPresolve);\n\n    // Add new cells\n    game.cells = [];\n    for (var i=0; i < MAX_DENSITY; i++) {\n        game.cells.push(newCell());\n    }\n\n    // Additional attributes\n    game._frames_per_step = 1;\n    game._frame_no = 0;\n    game._time = 0;\n    game._next_plots_update = 0;\n    game._next_stats_update = 0;\n    game._next_sliders_update = 0;\n\n    game._framerate_multiplier = 1;\n    game._brownian_force_multiplier = 1;\n\n    // Add UI elements\n    ui_create();\n\n    // Update statistics\n    stats.update();\n}\n\n\nfunction update() {\n    // Update simulation state (Cells are automatically updated using their\n    // update() method.\n    game._frame_no++;\n\n    // Update forces manually\n    // TODO: this is not working. We are only controlling the frame rate\n    //       parameter in order to set the speed of simulation.\n    //       This is potentially unstable.\n    if (!game.paused) {\n        game.prepare_frame();\n        if (game._frames_per_step > 1) {\n            for (var i = 0; i < game._frames_per_step - 1; i++) {\n                game.physics.p2.update();\n                game.prepare_frame();\n            }\n        }\n    }\n\n    // Update division\n    game.division.body.velocity.x = - 1.0 * (game.division.position.x - SEPARATION_POINT);\n\n    // Update UI\n    if (game._time >= game._next_sliders_update) {\n        game._next_sliders_update += 0.1;\n        ui_update_sliders();\n    }\n\n    if (game._time >= game._next_stats_update) {\n        game._next_stats_update += 0.33;\n        stats.update();\n    }\n\n    if (game._time > game._next_plots_update) {\n        game._next_plots_update += 0.5;\n        plots.update();\n    }\n}\n\n\n/**\n * Kills elements in excess compared to the maximum supported density.\n */\ngame._split = function() {\nvar left = [], right = [];\n    for (var cell of game.cells) {\n        if (cell.is_left()) {\n            left.push(cell);\n        } else {\n            right.push(cell);\n        }\n    }\n    return {left: left, right: right};\n};\n\ngame.kill_excess = function () {\n    // Split populations\n    var split = game._split();\n    var left = split.left;\n    var right = split.right;\n\n    // Reach desired density\n    var area = SEPARATION_POINT / WIDTH;\n    var density = left.length / area;\n    while (density > MAX_DENSITY && left.length > 2) {\n        game._kill_roullete(left);\n        density = left.length / area;\n    }\n\n    area = (WIDTH - SEPARATION_POINT) / WIDTH;\n    density = right.length / area;\n    while (density > MAX_DENSITY && right.length > 2) {\n        game._kill_roullete(right);\n        density = right.length / area;\n    }\n};\n\ngame._kill_roullete = function(L) {\n    var cum_fit = [];\n    var S = 0;\n\n    for (var cell of L) {\n        S += 1 / (Math.pow(cell.fitness, FITNESS_EXPONENT)  + 1e-6);\n        cum_fit.push(S);\n    }\n\n    var thresh = Math.random() * S;\n    var i = 0;\n    while (cum_fit[i] < thresh) {\n        i += 1;\n    }\n\n    L[i].destroy();\n    L.splice(i, 1);\n};\n\n\n/**\n * Prepare forces for the custom physics interactions\n */\ngame.prepare_frame = function() {\n    game.kill_excess();\n\n    for (var cell of this.cells) {\n        cell.prepare_frame();\n    }\n    this._time += this._framerate_multiplier / 60;\n};\n\n/**\n *  New mutant individual --- This introduces A3 or B3 into some part of the population\n */\ngame.new_mutation = {};\n\ngame.new_mutation._add_new = function(gene, pos) {\n    var cell = newCell({pos: pos});\n    cell.code[0][gene] = 2;  // force one gene to be the 3rd allele\n    game.cells.push(cell);\n    return cell;\n};\n\ngame.new_mutation.left = function(gene) {\n    var L = game._split().left;\n    for (var i =0; i < MUTATION_GROUP_SIZE; i++) game._kill_roullete(L);\n\n    for (i=0; i < MUTATION_GROUP_SIZE; i++) {\n        var x = random_uniform(0, SEPARATION_POINT);\n        var y = random_uniform(0, HEIGHT);\n        game.new_mutation._add_new(gene, {x: x, y: y});\n    }\n};\n\ngame.new_mutation.right = function(gene) {\n    var L = game._split().right;\n    for (var i =0; i < MUTATION_GROUP_SIZE; i++) game._kill_roullete(L);\n\n    for (i=0; i < MUTATION_GROUP_SIZE; i++) {\n        var x = random_uniform(SEPARATION_POINT, WIDTH);\n        var y = random_uniform(0, HEIGHT);\n        game.new_mutation._add_new(gene, {x: x, y: y});\n    }\n};\n\ngame.new_mutation.random = function(gene) {\n    for (var i =0; i < MUTATION_GROUP_SIZE; i++) game._kill_roullete(game.cells.concat());\n\n    for (i=0; i < MUTATION_GROUP_SIZE; i++) {\n        game.new_mutation._add_new(gene, undefined);\n    }\n};\n\n\ngame.remove_from_left = function() {\n\n};\n\n\n/**\n * Bottleneck functions: they remove 75% of the population.\n */\ngame.bottleneck = {};\n\ngame.bottleneck.left = function() {\n    for (var cell of game.cells.concat()) {\n        if (cell.position.x < SEPARATION_POINT) {\n            if (Math.random() < 0.5) cell.destroy();\n        }\n    }\n};\n\ngame.bottleneck.right = function() {\n    for (var cell of game.cells.concat()) {\n        if (cell.position.x > SEPARATION_POINT) {\n            if (Math.random() < 0.5) cell.destroy();\n        }\n    }\n};\n\ngame.bottleneck.total = function() {\n    for (var cell of game.cells.concat()) {\n        if (Math.random() < 0.5) cell.destroy();\n    }\n};\n\ngame.reset_population = function() {\n    for (var cell of game.cells.concat()) {\n        cell.destroy();\n    }\n\n    game.cells = [];\n    for (var i=0; i < MAX_DENSITY; i++) {\n        game.cells.push(newCell());\n    }\n};\n\n\n/**\n * New population\n */\ngame.read_frequencies = function() {\n    ALLELE_FREQS.a = [\n        parseFloat($(\"allele-freq-a1\").innerText),\n        parseFloat($(\"allele-freq-a2\").innerText),\n        parseFloat($(\"allele-freq-a3\").innerText)];\n\n    ALLELE_FREQS.b = [\n        parseFloat($(\"allele-freq-b1\").innerText),\n        parseFloat($(\"allele-freq-b2\").innerText),\n        parseFloat($(\"allele-freq-b3\").innerText)];\n};\n\n\ngame._insert_to_right = function() {\n    return $(\"new-population-insert-right\").checked;\n};\n\ngame.replace_population = function() {\n    \n};\n\n/**\n * Simulation speed: these functions control the speed of simulation.\n */\ngame.speed = {};\ngame.speed.pause = function() {\n    game.paused = true;\n};\n\ngame.speed.normal = function() {\n    game.paused = false;\n    game._frames_per_step = 1;\n    game._framerate_multiplier = 1;\n    game._brownian_force_multiplier = 1;\n    game.physics.p2.frameRate = 1 / 60;\n};\n\ngame.speed.fast = function() {\n    game.paused = false;\n    game._frames_per_step = 1;\n    game._framerate_multiplier = 5;\n    game._brownian_force_multiplier = Math.sqrt(5);\n    game.physics.p2.frameRate = 5 / 60;\n};\n\ngame.speed.jump = function() {\n    game.paused = true;\n};\n\n\n/**\n * Called after the broadphase before solving the collision.\n */\nfunction onPresolve(presolve) {\n    for (var eq of presolve.contactEquations) {\n\n        // Fetch parents\n        if (eq === undefined) continue;\n        var parent_i = eq.bi.parent;\n        var parent_j = eq.bj.parent;\n\n        // Empty collisions and collisions with the boundaries\n        if (parent_i === null || parent_j === null) continue;\n\n        // Has a collisions with the division object\n        var cell = eq.bi.parent.sprite;\n        var division = eq.bj.parent.sprite;\n\n        if (cell === game.division) {\n            let aux = division;\n            division = cell;\n            cell = aux;\n        }\n\n        eq.enabled = true;\n        if (division === game.division) {\n            if (cell.migration_cooldown > 0) {\n                eq.enabled = false;\n            } else if (Math.random() < MIGRATION_PROBABILITY) {\n                eq.enabled = false;\n                cell.migration_cooldown = 60;\n                cell.body.velocity.x += MIGRATION_DELTA_SPEED * (cell.is_right()? -1: 1);\n            } else {\n                cell.body.velocity.x *= -1;\n                cell.body.velocity.x -= MIGRATION_DELTA_SPEED * (cell.is_right()? -1: 1);\n            }\n        }\n    }\n}\n\n\n\n/**\n * FITNESS CALCULATIONS\n *\n * This sections include functions to manipulate the fitness of individuals based on their genetic data.\n */\n\nvar fitness = {};\n\nfitness.table = {};\n\nfitness.full = function() {\n    var out = {};\n    for (var i=1; i <= 3; i++) {\n        for (var j=i; j <= 3; j++) {\n            for (var k=1; k <= 3; k++) {\n                for (var r=k; r <= 3; r++) {\n                    var name = \"A\" + i.toString() + j.toString() + \"B\" + k.toString() + r.toString();\n                    out[name] = 1.0;\n                }\n            }\n        }\n    }\n    return out;\n}();\n\nfitness.add_value = function() {\n    var gene = $(\"#fitness-gene-name\")[0].value.toUpperCase();\n    var value = parseFloat($(\"#fitness-value\")[0].value);\n    var table = $(\"#fitness-table\")[0];\n\n    if (!fitness._validate_gene_name(gene)) {\n        return;\n    }\n    for (var name of fitness.expand_name(gene)) {\n        if (!(name in fitness.table)) {\n            var row = table.insertRow(table.rows.length - 1);\n            var cell1 = row.insertCell(0);\n            var cell2 = row.insertCell(1);\n            cell1.innerHTML = name;\n            cell2.innerHTML = value;\n        } else {\n            for (var i=1; i < table.rows.length - 1; i++) {\n                var cellname = table.rows[i].cells[0].innerHTML;\n                if (cellname === name) {\n                    table.rows[i].cells[1].innerHTML = value;\n                }\n            }\n        }\n        fitness.table[name] = value;\n    }\n\n    for (var tag of fitness.expand_tag(gene)) {\n        fitness.full[tag] = value;\n    }\n};\n\nfitness.expand_name = function(gene) {\n    var tags = fitness.expand_tag(gene);\n    var out = [tags[0]];\n    for (var i=1; i < tags.length; i++) {\n        if (tags[i] in fitness.table) {\n            out.push(tags[i]);\n        }\n    }\n    return out;\n};\n\nfitness.expand_tag = function(gene) {\n    var out = [];\n    var re = /([AB][123]+)([AB][123]+)?/;\n    var match = re.exec(gene);\n    var g1 = match[1];\n    var g2 = match[2];\n\n    // Normalize allele ordering\n    var norm = fitness._normalize;\n    var i, j, k, letter;\n\n    if (g2 === undefined) {\n        if (g1.length === 3) {\n            g1 = norm(g1);\n            out.push(g1);\n\n            for (i = 1; i <= 3; i++) {\n                for (j = i; j <= 3; j++) {\n                    letter = g1[0] === \"A\"? \"B\": \"A\";\n                    g2 = letter + i.toString() + j.toString();\n                    if (g1[0] === \"A\") {\n                        out.push(g1 + g2);\n                    } else {\n                        out.push(g2 + g1);\n                    }\n                }\n            }\n        } else {\n            out.push(g1);\n\n            for (k=1; k <= 3; k++) {\n                var g1k = norm(g1 + k);\n\n                for (i = 1; i <= 3; i++) {\n                    for (j = i; j <= 3; j++) {\n                        letter = g1[0] === \"A\" ? \"B\" : \"A\";\n                        g2 = letter + i.toString() + j.toString();\n                        if (g1[0] === \"A\") {\n                            out.push(g1k + g2);\n                        } else {\n                            out.push(g2k + g1);\n                        }\n                    }\n                }\n            }\n        }\n\n    } else {\n        // Swap bad ordering\n        if (g1[0] === \"B\") {\n            var aux = g1;\n            g1 = g2;\n            g2 = aux;\n        }\n\n        if (g1.length === 3 && g2.length === 3) {\n            out.push(norm(g1) + norm(g2));\n        } else if (g1.length === 3) {\n            out.push(norm(g1) + g2);\n            for (i=1; i <= 3; i++) {\n                out.push(norm(g1) + norm(g2 + i.toString()));\n            }\n        } else if (g2.length === 3) {\n            out.push(g1 + norm(g2));\n            for (i=1; i <= 3; i++) {\n                out.push(norm(g1 + i.toString()) + norm(g2));\n            }\n        } else {\n            out.push(g1 + g2);\n            for (i=1; i <= 3; i++) {\n                for (j=1; j <= 3; j++) {\n                    out.push(norm(g1 + i.toString()) + norm(g2 + i.toString()));\n                }\n            }\n        }\n    }\n    return out;\n};\n\nfitness._validate_gene_name = function(name) {\n    var re = /^([AB])[123][123]?(?:([AB])[123][123]?)?$/;\n    if (re.test(name)) {\n        var match = re.exec(name);\n        return match[1] != match[2];\n    } else {\n        return false;\n    }\n};\n\nfitness._normalize = function(x) {\n    if (parseInt(x[1]) > parseInt(x[2])) {\n        return x[0] + x[2] + x[1];\n    } else {\n        return x;\n    }\n};\n\nfitness.from_code = function(code) {\n    var norm = fitness._normalize;\n    return norm(\"A\" + (code[0][0] + 1).toString() + (code[1][0] + 1).toString()) +\n           norm(\"B\" + (code[0][1] + 1).toString() + (code[1][1] + 1).toString());\n};\n\n\n/*******************************************************************************\n *\n * CELL OBJECTS\n *\n * These are the main elements in the game. They have physics properties, a\n * renderization and a genetic code.\n *\n * This is a simple function that return a cell object. Do not use the new\n * operator.\n *\n *******************************************************************************\n */\nfunction newCell(args) {\n    args = args || {};\n\n    // Genetic code and gender\n    var code;\n    var gender = Math.random() > 0.5? 0: 1;\n    if (args.code === undefined) {\n        code = random_code();\n    } else {\n        code = args.code;\n    }\n    var code_descr = fitness.from_code(code);\n    var img_name = code_descr.replace(\"A\", \"\").replace(\"B\", \"\");\n    img_name = (gender === 0? \"f\": \"m\") + img_name;\n\n    // Create new sprite and set default values\n    var pos;\n    if (args.pos === undefined) {\n        pos = new Phaser.Point(Math.random() * WIDTH, Math.random() * HEIGHT);\n    } else {\n        pos = args.pos;\n    }\n    var cell = game.add.sprite(pos.x, pos.y, img_name);\n    game.physics.p2.enable(cell);\n\n    //  Enable physics\n    game.physics.arcade.enable(cell);\n    cell.body.collideWorldBounds = true;\n    cell.body.allowRotation = true;\n    cell.body.angle = 2;\n    cell.body.onBeginContact.add(cell_collision, cell);\n    cell.body.damping = LINEAR_DAMPING;\n    cell.body.angularDamping = ANGULAR_DAMPING;\n\n    // Bounding box\n    cell.body.setRectangle(36, 24, 11, 8);\n\n    // Biological information\n    cell.code = code;\n    cell.code_descr = code_descr;\n    cell.gender = gender;\n    cell.mating_duration = -MATING_DURATION;\n    cell.mate = null;\n    cell.fitness = 1.0;\n    cell.migration_cooldown = 0;\n\n    // Bind methods\n    cell.prepare_frame = cell_update;\n    cell.destroy = cell_destroy;\n    cell.is_right = cell_is_right;\n    cell.is_left = cell_is_left;\n\n    // Done :-)\n    return cell;\n}\n\n\n/**\n * Update cell at each frame.\n */\nfunction cell_update() {\n    // Binding\n    var cell = this;\n\n    // Lifespan\n    cell.mating_duration += game._framerate_multiplier;\n    cell.migration_cooldown -= game._framerate_multiplier;\n    cell.fitness = fitness.full[cell.code_descr];\n\n    // Brownian forces\n    var strength = BROWNIAN_STRENGTH / game._brownian_force_multiplier;\n    var force = cell.body.force;\n    force.x = strength * (Math.random() - 0.5);\n    force.y = strength * (Math.random() - 0.5);\n\n    // Drift force\n    var alpha = DRIFT_DAMPING;\n    var v = DRIFT_VELOCITY;\n    var theta = 2 * Math.PI * Math.random();\n    var vdrift = new Phaser.Point(v * Math.cos(theta), v * Math.sin(theta));\n    force.x += -alpha * (cell.body.velocity.x - vdrift.x);\n    force.y += -alpha * (cell.body.velocity.y - vdrift.y);\n\n    // Spring force -- mating\n    if (cell.mate != null) {\n        var other = cell.mate;\n        var k = SPRING_CONSTANT;\n\n        if (!(other.mate === cell)) {\n            other.mate = null;\n            cell.mate = null;\n            return;\n        }\n        force.x -= k * (cell.position.x - other.position.x);\n        force.y -= k * (cell.position.y - other.position.y);\n\n        if (cell.mating_duration > MATING_DURATION) {\n            cell.mate = null;\n            other.mate = null;\n            cell.mating_duration = -3 * MATING_DURATION;\n            other.mating_duration = -3 * MATING_DURATION;\n\n            for (var n=0; n < OFFSPRING; n++) {\n                var code = crossover(cell.code, other.code);\n                var pos = new Phaser.Point(\n                    (cell.position.x + other.position.x) / 2,\n                    (cell.position.y + other.position.y) / 2\n                );\n                //pos.x += 10 * (Math.random() - 0.5);\n                //pos.y += 10 * (Math.random() - 0.5);\n\n                var newcell = newCell({code: mutate_code(code), pos: pos});\n                game.cells.push(newcell);\n            }\n        }\n    }\n}\n\n\n/**\n * Destroy cell object and remove it from the game.cells list\n */\nfunction cell_destroy() {\n    var cell = this;\n\n    if (cell.mate != null) {\n        cell.mate.mate = null;\n    }\n\n    for (var i = 0; i < game.cells.length; i++) {\n        if (cell === game.cells[i]) {\n            game.cells.splice(i, 1);\n            cell.kill();\n            break;\n        }\n    }\n\n}\n\n\n/**\n * Process cell collisions.\n *\n * The first argument is the \"body\" object of the cell.\n */\nfunction cell_collision(body) {\n    var cell1 = body.sprite;\n    var cell2 = this;\n\n    if (cell1.mate === null && cell2.mate === null\n            && cell1.gender != cell2.gender\n            && cell1.mating_duration > 0\n            && cell2.mating_duration > 0) {\n        cell1.mate = cell2;\n        cell2.mate = cell1;\n        cell1.mating_duration = 0;\n        cell2.mating_duration = 0;\n    }\n}\n\n\n/**\n * Insert a single mutation point in the genetic code\n */\nfunction mutate_code(code) {\n    if (Math.random() < MUTATION_RATE_A) {\n        code[Math.random() > 0.5? 0: 1][0] = Math.floor(3 * Math.random());\n    }\n\n    if  (Math.random() < MUTATION_RATE_B) {\n        code[Math.random() > 0.5? 0: 1][1] = Math.floor(3 * Math.random());\n    }\n\n    return code;\n}\n\nfunction crossover(codeA, codeB) {\n    var i, j;\n    i = Math.random() > 0.5? 0: 1;\n    if (Math.random() > LINKAGE) {\n        j = Math.random() > 0.5? 0: 1;\n    } else {\n        j = i;\n    }\n    var a0 = codeA[i][0];\n    var a1 = codeA[j][1];\n\n    i = Math.random() > 0.5? 0: 1;\n    if (Math.random() > LINKAGE) {\n        j = Math.random() > 0.5? 0: 1;\n    } else {\n        j = i;\n    }\n    var b0 = codeB[i][0];\n    var b1 = codeB[j][1];\n\n    return [[a0, a1], [b0, b1]];\n}\n\n\n/**\n * Query if cell is on left or right size of the population division\n */\nfunction cell_is_left() {\n    return this.position.x < SEPARATION_POINT;\n}\n\nfunction cell_is_right() {\n    return this.position.x >= SEPARATION_POINT;\n}\n\n\n/*******************************************************************************\n *\n * STATISTICS\n *\n * This object control the global statistics about game elements.\n *\n *******************************************************************************\n */\nvar _node = function() {return {total:[], left: [], right: []}};\n\nvar stats = {\n    // Population lists\n    population: {\n        total: [], left: [], right: [],\n        male: _node(),\n        female: _node(),\n        gender: []\n    },\n\n    allele_a: [_node(), _node(), _node()],\n    allele_b: [_node(), _node(), _node()],\n\n    genotype_a: [\n        [_node(),   _node(),   _node()],\n        [undefined, _node(),   _node()],\n        [undefined, undefined, _node()]\n    ],\n    genotype_b: [\n        [_node(),   _node(),   _node()],\n        [undefined, _node(),   _node()],\n        [undefined, undefined, _node()]\n    ],\n\n    // Other attributes\n    update_tables: true\n};\n\n// Gender aliases\nstats.population.gender[0] = stats.population.male;\nstats.population.gender[1] = stats.population.female;\n\n\n/**\n * Call `counter` function to update the given node with some statistics\n */\nstats._update_node = function(populations, node, counter) {\n    node.total.push(counter(populations.total));\n    node.left.push(counter(populations.left));\n    node.right.push(counter(populations.right));\n};\n\n\n/**\n * Update all statistics.\n *\n * Maybe it is better to split this function across several frames in order to\n * distribute the load.\n *\n * It is here for an easy implementation.\n */\nstats.update = function() {\n    // Prepare populations\n    var populations = {\n        total: game.cells,\n        left: [],\n        right: []\n    };\n\n    for (var cell of game.cells) {\n        if (cell.position.x > SEPARATION_POINT) {\n            populations.right.push(cell);\n        } else {\n            populations.left.push(cell);\n        }\n    }\n\n    stats.update_population(populations);\n    stats.update_alleles(populations);\n    stats.update_genotype(populations);\n};\n\n\n/**\n * Update population information.\n */\nstats.update_population = function(pop) {\n    // Count gender and position for each node\n    this._update_node(pop, stats.population, function(L) {return L.length});\n    for (var gender=0; gender < 2; gender++) {\n        this._update_node(pop, stats.population.gender[gender],\n            function(L) {\n                var N = 0;\n                for (var x of L) {\n                    if (x.gender == gender) {\n                        N++;\n                    }\n                }\n                return N;\n            }\n        );\n    }\n\n    this._update_gender_table();\n};\n\nstats._update_gender_table = function() {\n    var last = function(L) {return L[L.length - 1];};\n    var template = TEMPLATES['stats-table-count-tbody'];\n    var tbody = $('#stats-table-count-tbody');\n    var data = {\n        males: last(stats.population.male.total),\n        males_left: last(stats.population.male.left),\n        males_right: last(stats.population.male.right),\n        females: last(stats.population.female.total),\n        females_left: last(stats.population.female.left),\n        females_right: last(stats.population.female.right),\n        total: last(stats.population.total),\n        total_left: last(stats.population.left),\n        total_right: last(stats.population.right)\n    };\n    var rendered = Mustache.render(template, data);\n    tbody.html(rendered);\n};\n\n\n\n/**\n * Update alleles statistics.\n */\nstats._count_alleles = function(L, i, pos) {\n   var total = 0;\n   pos = pos || 0;\n   for (var cell of L) {\n       for (var strip of cell.code) {\n           if (strip[pos] === i) {\n               total++;\n           }\n       }\n   }\n   return total;\n};\n\nstats._update_alleles_table = function() {\n    var template = TEMPLATES['stats-table-tbody'];\n    var last = function(L) {return L[L.length - 1].toFixed(1)};\n    var tbody = $('#stats-table-alleles-tbody');\n    var rows = [];\n\n    for (var gene of ['a', 'b']) {\n        var L = this['allele_' + gene];\n\n        for (var i=0; i < 3; i++) {\n            var name = gene.toUpperCase() + (i + 1).toString();\n            var stats = L[i];\n            var row = {\n                name: name,\n                left: last(stats.left),\n                right: last(stats.right),\n                total: last(stats.total)\n            };\n            rows.push(row);\n        }\n    }\n    var rendered = Mustache.render(template, {rows: rows});\n    tbody.html(rendered);\n};\n\nstats.update_alleles = function(pop) {\n    var counter = this._count_alleles;\n\n    for (let i=0; i < 3; i++) {\n        this._update_node(pop, stats.allele_a[i],\n            function(L) {\n                return 100 * counter(L, i, 0) / (2 * L.length);\n            }\n        );\n        this._update_node(pop, stats.allele_b[i],\n            function(L) {\n                return 100 * counter(L, i, 1) / (2 * L.length);\n            }\n        );\n    }\n\n    if (this.update_tables) {\n        this._update_alleles_table();\n    }\n};\n\n\n/**\n * Update genotype statistics.\n */\nstats._count_genotypes = function(L, i, j, pos) {\n    var total = 0;\n    pos = pos || 0;\n    for (var cell of L) {\n        if (cell.code[0][pos] === i && cell.code[1][pos] === j) {\n            total++;\n        }\n    }\n    return total;\n};\n\nstats._update_genotype_table = function() {\n    var template = TEMPLATES['stats-table-tbody'];\n    var last = function(L) {return L[L.length - 1].toFixed(1)};\n\n    for (var gene of ['a', 'b']) {\n        var L = this['genotype_' + gene];\n        var rows = [];\n        var tbody = $('#stats-table-genetic-' + gene + '-tbody');\n        for (var pair of [[0, 0], [1, 1], [2, 2],\n                          [0, 1], [0, 2], [1, 2]]) {\n            var i = pair[0];\n            var j = pair[1];\n            var name = gene.toUpperCase() + (i + 1).toString() + (j + 1).toString();\n            var stats = L[i][j];\n            var row = {\n                name: name,\n                left: last(stats.left),\n                right: last(stats.right),\n                total: last(stats.total)\n            };\n            rows.push(row);\n        }\n        var rendered = Mustache.render(template, {rows: rows});\n        tbody.html(rendered);\n    }\n};\n\nstats.update_genotype = function(pop) {\n    var counter = this._count_genotypes;\n\n    for (let i=0; i < 3; i++) {\n        for (let j=i; j < 3; j++) {\n            this._update_node(pop, stats.genotype_a[i][j],\n                function(L) {\n                    return 100 * (counter(L, i, j, 0) + ((i == j)? 0: counter(L, j, i, 0))) / L.length;\n                }\n            );\n\n            this._update_node(pop, stats.genotype_b[i][j],\n                function(L) {\n                    return 100 * (counter(L, i, j, 1) + ((i == j)? 0: counter(L, j, i, 1))) / L.length;\n                }\n            );\n        }\n    }\n\n    if (this.update_tables) {\n        this._update_genotype_table()\n    }\n};\n\n\n/*******************************************************************************\n *\n * MATH FUNCTIONS\n *\n * Routines with mathematical and statistical operations\n *\n *******************************************************************************\n */\n\nfunction roullete(L) {\n    var r = Math.random();\n    var S = 0;\n    for (var i=0; i <= L.length; i++) {\n        S += L[i];\n        if (r <= S) {\n            return i;\n        }\n    }\n    return L.length;\n}\n\n\n/**\n * Return a random integer in the range [n, m].\n */\nfunction randint(n, m) {\n    var epsilon = 1e-6;\n    return Math.floor(Math.random() * (m - n + 1 - epsilon)) + n;\n}\n\n\n/**\n * Return a random number uniformly distributed on the interval\n */\nfunction random_uniform(start, end) {\n    var delta = end - start;\n    return start + Math.random() * delta;\n}\n\n\n/**\n * Return a random genetic code\n */\nfunction random_code() {\n    var code = [[0, 0], [0, 0]];\n\n    // first chromossome\n    var a = roullete(ALLELE_FREQS.a);\n    var b = roullete(ALLELE_FREQS.b);\n    code[0] = [a, b];\n\n    // second chromossome\n    a = roullete(ALLELE_FREQS.a);\n    b = roullete(ALLELE_FREQS.b);\n    code[1] = [a, b];\n\n    return code;\n}\n\n/*******************************************************************************\n *\n * UI INTERACTION\n *\n * These functions update and poll information from the UI.\n * There are 3 loops. The slow loop runs every half second, the fast loop\n * runs every 0.1 second and the instant runs every frame (1/60 seconds).\n *\n *******************************************************************************\n */\nfunction ui_create() {\n    ui_create_templates();\n}\n\n\nfunction ui_create_templates() {\n    var template;\n\n    // Table body for counting number of elements\n    template =\n    \"<tr>\\\n      <td>Female</td>\\\n      <td>{{females}}</td>\\\n      <td>{{females_left}}</td>\\\n      <td>{{females_right}}</td>\\\n    </tr>\\\n    <tr>\\\n      <td>Male</td>\\\n      <td>{{males}}</td>\\\n      <td>{{males_left}}</td>\\\n      <td>{{males_right}}</td>\\\n    </tr>\\\n    <tr>\\\n      <td>Total</td>\\\n      <td>{{total}}</td>\\\n      <td>{{total_left}}</td>\\\n      <td>{{total_right}}</td>\\\n    </tr>\";\n    Mustache.parse(template);\n    TEMPLATES['stats-table-count-tbody'] = template;\n\n    // Table body for allele frequencies\n    template =\n        '{{#rows}}\\\n        <tr>\\\n          <td>{{name}}</td>\\\n          <td>{{total}}</td> <td>{{left}}</td> <td>{{right}}</td>\\\n        </tr>{{/rows}}';\n    Mustache.parse(template);\n    TEMPLATES['stats-table-tbody'] = template;\n}\n\n\n// Update simulation values from sliders\nfunction ui_update_sliders() {\n    // Separation force\n    var slider = document.getElementById('input-separation-force');\n    var value = slider.value | 0;\n    MIGRATION_PROBABILITY = (100 - value) / 100;\n\n    // Maximum density\n    slider = document.getElementById('input-max-density');\n    value = slider.value | 0;\n    if (value >= 50) {\n        MAX_DENSITY = 2 * value;\n    } else {\n        MAX_DENSITY = 12.5 + 1.75 * value;\n    }\n\n    // Selection pressure\n    slider = document.getElementById('input-selection-pressure');\n    value = slider.value | 0;\n    FITNESS_EXPONENT = value / 50;\n\n    // Separtion position\n    slider = document.getElementById('input-separation-point');\n    value = slider.value | 0;\n    SEPARATION_POINT = (15 + 0.70 * value) / 100 * WIDTH;\n\n    // Mutation rate\n    slider = document.getElementById('input-mutation-rate-a');\n    value = slider.value | 0;\n    MUTATION_RATE_A = Math.pow(value / 100, 3);\n\n    slider = document.getElementById('input-mutation-rate-b');\n    value = slider.value | 0;\n    MUTATION_RATE_B = Math.pow(value / 100, 3);\n\n    // Linkage\n    slider = document.getElementById('input-linkage');\n    value = slider.value | 0;\n    LINKAGE = value / 100;\n}\n\n/**\n * Toggle the visibility of an element\n */\nfunction toggle_visibility(elem) {\n    if ($(elem).css('display') == 'none') {\n        $(elem).css('display', 'block')\n    } else {\n        $(elem).css('display', 'none')\n    }\n}\n\n/*******************************************************************************\n *\n * UTILITY FUNCTIONS\n *\n * Unsorted helper functions.\n *\n *******************************************************************************\n */\n\n/**\n * Debug print\n */\nfunction dbg(text) {\n    var dbgdiv = document.getElementById(\"debug-area\");\n    dbgdiv.textContent = text;\n}\n\n\n/**\n * Make a dynamic javascript content downloadable.\n */\nfunction download(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n  element.style.display = 'none';\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\n\n\n/**\n * Push element to end of list, but truncates the array if it exceeds the\n * maximum size `maxsize`.\n */\nfunction push_trunc(list, value, maxsize) {\n    if (maxsize === undefined) {\n        maxsize = 100;\n    }\n    if (list.length > maxsize - 1) {\n        list.splice(0, 1);\n    }\n    list.push(value);\n}\n\n\n/**\n * Return an enumeration array for the input list of elements\n */\nfunction enumerate(list) {\n    var result = [];\n    var i = 0;\n    for (var x of list) {\n        result.push([i, x]);\n        i++;\n    }\n    return result;\n}\n\n\n/**\n * Enumerate the last N elements of the array\n */\nfunction enumerate_last(list, N) {\n    var result = [];\n    var delta = list.length - N;\n    if (delta <= 0) {\n        return enumerate(list);\n    }\n    for (var i=0; i < N; i++) {\n        result.push([i, list[i + delta]]);\n    }\n    return result;\n}\n\n\n/**\n * Push an element in an array of numbers that is equal to the last element\n * plus the given increment. If no increment is given, assume 1.\n *\n * Returns the pushed value.\n */\nfunction push_inc(list, inc) {\n    var value;\n\n    inc = (inc === undefined)? 1: inc;\n    value = list[list.length - 1];\n    if (value == undefined) {\n        value = 0;\n    }\n    value += inc;\n    list.push(value);\n    return value;\n}\n\n\n/**\n * Setup plots\n */\nvar plots = {\n    _track_gene: \"A\"\n};\n\nplots.track_gene = function(which) {\n    plots._track_gene = which;\n    $('#plot-allele-name').html(which);\n};\n\n$(function() {\n    plots.population = $.plot(\"#plot-population\", [[]], {\n        series: {shadowSize: 0},\n        yaxis: {min: 0, max: 200},\n        xaxis: {min: 0, max: 300, show: false}\n    });\n\n    plots.allele_a = $.plot(\"#plot-allele-a\", [[]], {\n        series: {shadowSize: 0},\n        yaxis: {min: 0, max: 100},\n        xaxis: {min: 0, max: 300, show: false}\n    });\n});\n\nplots.update = function () {\n    if (stats.population.total.length > 1) {\n        // Population plots\n        plots.population.setData([\n            enumerate_last(stats.population.total, 300),\n            enumerate_last(stats.population.left, 300),\n            enumerate_last(stats.population.right, 300)\n        ]);\n        plots.population.draw();\n\n        // Allele-A\n        var data = (plots._track_gene === \"A\")? stats.allele_a: stats.allele_b;\n        plots.allele_a.setData([\n            enumerate_last(data[0].total, 300),\n            enumerate_last(data[1].total, 300),\n            enumerate_last(data[2].total, 300)\n        ]);\n        plots.allele_a.draw();\n    }\n}\n"]}